---
- name: Create PVC 
  hosts: localhost
  connection: local
  become: yes
  tasks:
    - name: Creating PVC
      kubevirt_pvc:
        api_key: "{{ kv_api_token }}"
        validate_certs: false
        host: "{{ kv_vm_host }}"
        name: "{{ item }}-pvc"
        namespace: "{{ kv_vm_namespace }}"
        size: 20Gi
        access_modes:
          - ReadWriteOnce
        cdi_source:
          http:
            url: "{{ kv_vm_qcow_url }}"
      with_sequence: start=1 end="{{ kv_vm_number }}" format="{{ kv_vm_name }}%02d"
      
    - name: Creating the VM
      kubevirt_vm:
        api_key: "{{ kv_api_token }}"
        state: running
        host: "{{ kv_vm_host }}"
        validate_certs: false
        namespace: "{{ kv_vm_namespace }}"
        name: "{{ item }}"
        cpu_cores: "{{ kv_cpu_cores }}"
        memory: "{{ kv_vm_memory }}"
        disks:
          - bootOrder: 1
            name: root-disk
            volume:
              persistentVolumeClaim:
                claimName: "{{ item }}-pvc"
              name: root-disk
            disk:
              bus: virtio
        cloud_init_nocloud:
          userData: |-
            #cloud-config
            password: "{{ kv_ssh_password }}"
            chpasswd: { expire: False }
            ssh_authorized_keys:
              - "{{ kv_ssh_auth_key }}"
          userDataBase64: "{{kv_vm_command | b64encode }}"
      with_sequence: start=1 end="{{ kv_vm_number }}" format="{{ kv_vm_name }}%02d"
